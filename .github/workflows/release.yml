name: Build and Release

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:

permissions:
  contents: write
  packages: write

jobs:
  update-version:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.extract_version.outputs.version }}
      
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        token: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Extract version from tag
      id: extract_version
      run: |
        TAG_NAME="${{ github.ref_name }}"
        VERSION=${TAG_NAME#v}  # Remove 'v' prefix
        echo "version=${VERSION}" >> $GITHUB_OUTPUT
        echo "Extracted version: ${VERSION}"
        
    - name: Update package.json version
      run: |
        VERSION="${{ steps.extract_version.outputs.version }}"
        CURRENT_VERSION=$(node -p "require('./package.json').version")
        echo "Current package.json version: ${CURRENT_VERSION}"
        echo "Target version: ${VERSION}"
        
        if [ "${CURRENT_VERSION}" != "${VERSION}" ]; then
          echo "Updating package.json version to: ${VERSION}"
          npm version ${VERSION} --no-git-tag-version
        else
          echo "Version is already correct, skipping update"
        fi
        
    - name: Commit updated package.json
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        
        # Add files if they exist and have changes
        if [ -f package.json ]; then git add package.json; fi
        if [ -f package-lock.json ]; then git add package-lock.json; fi
        
        # Only commit if there are actually changes staged
        if git diff --staged --quiet; then
          echo "No changes to commit"
        else
          git commit -m "chore: bump version to ${{ steps.extract_version.outputs.version }}"
          git push origin HEAD:main
          echo "Version updated and pushed to main"
        fi
        
  build:
    needs: update-version
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]
        
    env:
      GH_TOKEN: ${{ secrets.GH_TOKEN }}
        
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        ref: main  # Make sure we get the updated package.json
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Determine release type
      run: |
        if [[ "${{ github.ref_name }}" == *"-"* ]]; then
          echo "ðŸ”„ Creating PRE-RELEASE for tag: ${{ github.ref_name }}"
          echo "EP_PRE_RELEASE=true" >> $GITHUB_ENV
        else
          echo "ðŸš€ Creating PRODUCTION RELEASE for tag: ${{ github.ref_name }}"
          echo "EP_PRE_RELEASE=false" >> $GITHUB_ENV
        fi
      shell: bash
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build application
      run: npm run build
      
    - name: Build and publish to GitHub Releases
      run: |
        echo "ðŸ”§ Building and publishing with electron-builder..."
        echo "Tag: ${{ github.ref_name }}"
        echo "Version: ${{ needs.update-version.outputs.version }}"
        echo "Pre-release: ${EP_PRE_RELEASE}"
        npm run publish -- --publish=always
      env:
        GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        DEBUG: electron-builder
        
    - name: Create GitHub Release (fallback)
      if: always()
      uses: softprops/action-gh-release@v2
      with:
        files: release/*
        prerelease: ${{ contains(github.ref_name, '-') }}
        generate_release_notes: true
        name: Release ${{ github.ref_name }}
      env:
        GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-${{ matrix.os }}
        path: release/
        retention-days: 7
